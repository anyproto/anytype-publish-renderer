package renderer

templ NameTemplate(classes string, name string) {
    <div class={ classes }> { name } </div>
}

templ CellTemplate(params *RelationRenderSetting, component templ.Component) {
    <div class={"cell " + params.FormatClass}>
        <div class={"cellContent", params.Classes}>
            @component
        </div>
        if params.IsFeatured {
            <div class="bullet"></div>
        }
    </div>
}

templ ListTemplate(more string, components []templ.Component) {
    <div class="wrap">
            <div class="over">
                for _, component := range components {
                    @component
                }
                if more != "" {
                   <div class="more"> { more } </div>
                }
            </div>
    </div>
}

templ ListElement(component templ.Component, icon templ.Component) {
    <div class="element">
        <div class="flex">
            if icon != nil {
                @icon
            }
            @component
		</div>
    </div>
}

templ ObjectElement(name string, url templ.SafeURL) {
    <div class="name">
        <a href={ url }>{ name }</a>
    </div>
}

templ OptionElement(value, color, relationType string) {
    <div class={"tagItem " + relationType + " tagColor-" + color}>
        <div class="inner"> { value } </div>
    </div>
}

templ ActiveCheckBoxTemplate() {
    <div class="icon checkbox active"> </div>
}

templ DisabledCheckBoxTemplate() {
    <div class="icon checkbox"> </div>
}
