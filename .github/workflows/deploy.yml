name: Deploy static on Google Storage

on:
  workflow_dispatch:
    inputs:
      role:
        description: "Select deployment role"
        required: true
        default: "stage1"
        type: choice
        options:
          - prod
          - stage1

jobs:
  deploy-static:
    runs-on: ubuntu-latest
    env:
      GOPRIVATE: github.com/anyproto
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23

      - name: git config
        run: git config --global url.https://${{ secrets.ANYTYPE_PAT }}@github.com/.insteadOf https://github.com/

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup GO env
        run: |
          echo GOPATH=$(go env GOPATH) >> $GITHUB_ENV
          echo GOBIN=$(go env GOPATH)/bin >> $GITHUB_ENV
          echo $(go env GOPATH)/bin >> $GITHUB_PATH

      - name: Setup license repository
        uses: actions/checkout@master
        with:
          repository: anyproto/open
          ref: refs/heads/main
          path: ./open

      - name: Go build
        run: |
          npm i
          make build

      - name: Debug static dir
        run: |
          tree static/

      - name: Install Brotli
        run: sudo apt-get update && sudo apt-get install -y brotli

      - name: Compress static files
        run: |
          find static/ -type f \( -name "*.js" -o -name "*.css" \) | while read -r file; do
            gzip -k -9 "$file"
            brotli -k -q 11 "$file"
          done

      - name: Set Google storage bucket
        run: echo "GCS_BUCKET=anytype-${{ github.event.inputs.role }}-publishserver" >> $GITHUB_ENV

      - name: Google cloud auth
        uses: google-github-actions/auth@2.1.10
        with:
          credentials_json: ${{ github.event.inputs.role == 'prod' && secrets.PROD_GCP_SERVICE_ACCOUNT || secrets.STAGE_GCP_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@2.1.4

      - name: Deploy static site to S3 bucket
        run: gsutil -m rsync -d -r static/ gs://$GCS_BUCKET/static/

      - name: Deploy embed iframe to S3 bucket
        run: gsutil -m rsync -d -r embed/ gs://$GCS_BUCKET/embed/

      - name: Ensure CORS for bucket
        run: |
          cat > /tmp/cors.json <<EOF
          [
            {
              "origin": ["*"],
              "responseHeader": ["Content-Type"],
              "method": ["GET", "HEAD", "OPTIONS"],
              "maxAgeSeconds": 3600
            }
          ]
          EOF
          gsutil cors set /tmp/cors.json  gs://$GCS_BUCKET
          rm /tmp/cors.json
      - name: Set content-encoding for js.gz files
        run: |
          gsutil ls "gs://$GCS_BUCKET/static/**/*.js.gz" | while read file; do
            gsutil setmeta -h "Content-Type:application/javascript" -h "Content-Encoding:gzip" "$file"
          done

      - name: Verify uploaded files
        run: |
          gsutil ls gs://$GCS_BUCKET/static/**
